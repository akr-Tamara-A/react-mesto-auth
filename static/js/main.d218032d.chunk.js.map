{"version":3,"sources":["images/logo.svg","images/yes.svg","images/no.svg","components/Header.jsx","contexts/CurrentUserContext.js","components/Card.jsx","components/Spinner.jsx","components/Main.jsx","components/Footer.jsx","components/Popup.jsx","components/ImagePopup.jsx","components/Form.jsx","components/PopupWithForm.js","components/Input.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","utils/Api.js","pages/MainPage.js","utils/Auth.js","pages/Register.js","pages/Login.js","hocs/ProtectedRoute.js","components/InfoTooltip.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","href","src","logoPath","alt","children","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","tabIndex","onClick","onCardClick","type","title","onCardLike","length","onCardDelete","Spinner","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","isCardsLoading","cards","map","key","Footer","Popup","useEffect","document","addEventListener","handleEsc","removeEventListener","isOpen","e","onClose","id","popupStyle","currentTarget","target","ImagePopup","Form","action","noValidate","onSubmit","formClass","submitValue","PopupWithForm","onDeleteCard","evt","preventDefault","Input","forwardRef","ref","isRequired","theme","rest","required","autoComplete","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleOnChangeName","useCallback","value","handleOnChangeDescription","handleSubmit","minLength","maxLength","pattern","placeholder","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","createRef","current","AddPlacePopup","setTitle","setLink","handleChangeTitle","handleChangeLink","api","options","this","_baseUrl","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","statusText","data","method","body","JSON","stringify","cardId","cardID","authorization","MainPage","setCurrentUser","editAvatar","editProfile","addPlace","viewPlace","deletePlace","isPopupsOpen","setIsPopupsOpen","setCards","selectedCard","setSelectedCard","setCardsIsLoading","editUserInfo","addCards","confirmDeletion","submitButtonValues","setSubmitButtonValues","getUserInfo","console","log","getInitialCards","catch","err","finally","closeAllPopups","Provider","userData","email","onSignOut","handleCardClick","currentCard","user","changeLikeCardStatus","newCard","newCards","handleCardLike","patchUserInfo","patchUserAvatar","postNewCard","deleteCard","filter","BASE_URL","Register","history","useHistory","password","registerData","setRegisterData","handleChange","to","Accept","onRegister","push","Login","loginData","setLoginData","token","localStorage","setItem","onLogin","ProtectedRoute","loggedIn","path","InfoTooltip","isSuccess","iconYesPath","iconNoPath","App","setLoggedIn","setIsOpen","setIsSuccess","setUserData","tokenCheck","jwt","getItem","removeItem","booleen","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d218032d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/yes.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/no.4072126c.svg\";","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\n/** Компонент \"Хедер\" */\nexport default function Header(props) {\n  /** Разметка хедера */\n  return (\n    <header className=\"header page__header page__section\">\n      <a href=\"https://akr-tamara-a.github.io/react-mesto-auth/\" className=\"header__logo-link\">\n        <img src={logoPath} alt=\"logo\" className=\"logo header__logo\" />\n      </a>\n      <h1 className=\"header__title\">Сервис Mesto Russia</h1>\n\n      {props.children}\n      \n    </header>\n  );\n}\n\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React, { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/** Компонент \"Карточка\" */\nexport default function Card(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  /** Функция обработки клика по карточке */\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  /** Функция обработки лайка карточки */\n  function handleLike() {\n    props.onCardLike(props.card);\n  }\n\n  /** Функция обработки удаления карточки */\n  function handleDelete() {\n    props.onCardDelete(props.card);\n  }\n\n  /** Проверка если создатель карточки - текущий пользователь */\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  /** Переменная со стиля для кнопки удаления карточки */\n  const cardDeleteButtonClassName = `\n      element__delete \n      button \n      button_style_secondary \n      button_type_delete\n      ${!isOwn ? \"element__delete_hidden\" : null}`;\n\n  /** Проверка есть ли у карточки лайк, поставленный текущим пользователем */\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n\n  /** Переменная со стиля для кнопки лайка карточки */\n  const cardLikeButtonClassName = `\n    button \n    button_type_no-like \n    element__like-button \n    button_style_secondary\n    ${isLiked ? \"button_type_like\" : \"button_type_no-like\"}\n    `;\n\n  /** Разметка карточки */\n  return (\n    <li className=\"elements__item element\">\n      <figure className=\"element__wrapper\">\n        <div className=\"element__head\">\n          <img\n            src={props.card.link}\n            alt={props.card.name}\n            tabIndex=\"0\"\n            onClick={handleClick}\n            className=\"element__image\"\n          />\n        </div>\n        <figcaption className=\"element__figcaption\">\n          <h3 className=\"element__title\">{props.card.name}</h3>\n          <div className=\"element__like\">\n            <button\n              type=\"button\"\n              title=\"Добавь лайк\"\n              className={cardLikeButtonClassName}\n              onClick={handleLike}\n            />\n            <p className=\"element__like-counter\">{props.card.likes.length}</p>\n          </div>\n        </figcaption>\n      </figure>\n      <button\n        type=\"button\"\n        title=\"Удалить фото\"\n        className={cardDeleteButtonClassName}\n        onClick={handleDelete}\n      />\n    </li>\n  );\n}\n","import React from 'react'; \nimport './styles/spinner.css'; \n \n/** Компонент \"Спиннер\" */ \nexport default function Spinner() { \n  /** Разметка спиннера */ \n  return ( \n    <div className=\"spinner\"> \n      <div className=\"spinner__item\"></div> \n    </div> \n  ); \n} ","import React, { useContext } from \"react\";\nimport Card from \"./Card\";\nimport Spinner from \"./Spinner\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n/** Компонент \"Контент страницы\" */\nexport default function Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  /** Разметка контента страницы */\n  return (\n    <main className=\"content page__content\">\n      <div className=\"profile page__section\">\n        <div className=\"profile__container\">\n          <div className=\"profile__userpic\">\n            <div\n              className=\"profile__edit\"\n              onClick={props.onEditAvatar}\n              tabIndex=\"0\"\n            ></div>\n            <img\n              src={currentUser && currentUser.avatar}\n              alt=\"Аватар автора\"\n              className=\"profile__image\"\n            />\n          </div>\n          <div className=\"profile__user\">\n            <h2 className=\"profile__user-name\">{currentUser && currentUser.name}</h2>\n            <p className=\"profile__user-job\">{currentUser && currentUser.about}</p>\n          </div>\n          <button\n            type=\"button\"\n            title=\"Редактирование профиля\"\n            onClick={props.onEditProfile}\n            className=\"button button_type_edit-profile button_style_primary\"\n          />\n        </div>\n        <div className=\"profile__add-post\">\n          <button\n            type=\"button\"\n            title=\"Добавить фото\"\n            onClick={props.onAddPlace}\n            className=\"button button_type_add-photo button_style_primary\"\n          />\n        </div>\n      </div>\n      <div className=\"elements page__section\">\n        <ul className=\"elements__container\">\n          {props.isCardsLoading \n            ? <Spinner />\n            : props.cards && props.cards.map((card) => {\n              return (\n                <Card \n                  card={card} \n                  key={card._id} \n                  onCardClick={props.onCardClick} \n                  onCardLike={props.onCardLike} \n                  onCardDelete={props.onCardDelete}/>\n              );\n            })\n          }\n        </ul>\n      </div>\n    </main>\n  );\n}\n","import React from 'react';\n\n/** Компонент \"Футер\" */\nexport default function Footer() {\n  /** Разметка футера */\n  return (\n    <footer className=\"footer page__footer page__section\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport './styles/popup.css';\r\n\r\n/** Компонент \"Попап\" */\r\nexport default function Popup(props) {\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleEsc);\r\n    return () => document.removeEventListener('keydown', handleEsc);\r\n  }, [props.isOpen]);\r\n\r\n  const handleEsc = (e) => {\r\n    if (e.key !== 'Escape') return;\r\n    props.onClose();\r\n  }\r\n\r\n  /** Разметка попапа */\r\n  return (\r\n    <div\r\n      id={props.name}\r\n      className={`popup ${props.popupStyle} ${props.isOpen && \"popup_opened\"}`}\r\n      tabIndex={`${props.isOpen ? '0' : '-1'}`}\r\n      onClick={(e) => {\r\n        if (e.currentTarget === e.target) props.onClose();\r\n      }}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          name=\"editProfileClose\"\r\n          type=\"button\"\r\n          title=\"Закрыть окно\"\r\n          onClick={props.onClose}\r\n          className=\"popup__close\"\r\n        />\r\n\r\n        {props.children}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport Popup from './Popup';\n\n/** Компонент \"Попап просмотра фото\" */\nexport default function ImagePopup(props) {\n  /** Разметка попапа просмотра фото */\n  return (\n    <Popup\n      name=\"viewPlace\" \n      popupStyle=\"popup_style_view\"\n      {...props}\n    >\n      <div className=\"popup__view\">\n        <img \n          src={props.card && props.card.link} \n          alt={props.card && props.card.name} \n          className=\"popup__photo\" />\n        <p className=\"popup__photo-title\">\n          {props.card && props.card.name}\n        </p>\n      </div>\n    </Popup>\n  );\n}\n\n\n","import React from \"react\";\r\nimport './styles/form.css';\r\n\r\n/** Компонент \"Форма\" */\r\nexport default function Form(props) {\r\n\r\n  /** Разметка формы */\r\n  return (\r\n    <form\r\n      action=\"#\"\r\n      name={props.name}\r\n      noValidate\r\n      onSubmit={props.onSubmit}\r\n      className={`form form_style_${props.formClass}`}\r\n    >\r\n      <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n      <fieldset className=\"form__fieldset\">\r\n        {props.children}\r\n      </fieldset>\r\n      \r\n      <button\r\n        name={`${props.name}Submit`}\r\n        type=\"submit\"\r\n        className={`form__submit form__submit_style_${props.formClass}`}\r\n      >\r\n        {props.submitValue}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Popup from \"./Popup\";\r\nimport Form from \"./Form\";\r\n\r\nexport default function PopupWithForm({ onDeleteCard, submitValue, ...props }) {\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onDeleteCard();\r\n  };\r\n\r\n  return (\r\n    <Popup \r\n      name=\"deleteCard\" \r\n      popupStyle=\"popup_style_form\"\r\n      {...props}\r\n      >\r\n      <Form\r\n        title=\"Вы уверены?\" \r\n        submitValue={submitValue}\r\n        formClass=\"popup\"\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { forwardRef } from \"react\";\n\n/** Компонент \"Инпут\" */\nconst Input = forwardRef(({ name, isRequired, theme, ...rest }, ref) => {\n  /** Разметка инпута */\n  return (\n    <label className=\"popup__form-field\">\n      <input\n        ref={ref}\n        id={`input-${name}`}\n        name={name}\n        required={isRequired}\n        autoComplete=\"true\"\n        {...rest}\n        className={`popup__input popup__input_style_${theme}`}\n      />\n      <span id={`input-${name}-error`} className=\"popup__input-error\"></span>\n    </label>\n  );\n});\nexport default Input;\n","import React, { useState, useContext, useCallback, useEffect } from 'react';\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport Popup from './Popup';\nimport Form from './Form';\nimport Input from \"./Input\";\n\n\n/** Компонент \"Попап редактирование профиля\" */\nexport default function EditProfilePopup({onUpdateUser, ...props}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name || '');\n      setDescription(currentUser.about || '');\n    }\n  }, [currentUser]);\n\n  const handleOnChangeName = useCallback(evt => {\n    setName(evt.target.value);\n  }, [setName]);\n\n  const handleOnChangeDescription = useCallback(evt => {\n    setDescription(evt.target.value);\n  }, [setDescription]);\n\n  const handleSubmit = useCallback((evt) => {\n    evt.preventDefault();\n\n    onUpdateUser({\n      name, \n      about: description});\n  }, [name, description, onUpdateUser]);\n\n  return (\n    <Popup \n      name=\"editProfile\" \n      popupStyle=\"popup_style_form\"\n      {...props}\n    >\n      <Form\n        title=\"Редактировать профиль\"\n        submitValue=\"Сохранить\"\n        formClass=\"popup\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          name=\"userName\"\n          theme=\"light\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          pattern=\"^[A-Za-zА-Яа-яЁё\\s-]+$\"\n          placeholder=\"Имя пользователя\"\n          isRequired={true}\n          value={name}\n          onChange={handleOnChangeName}\n        />\n        <Input\n          name=\"userJob\"\n          theme=\"light\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          placeholder=\"О себе\"\n          isRequired={true}\n          value={description}\n          onChange={handleOnChangeDescription}\n        />\n      </Form>\n    </Popup>\n  );\n}","import React, { useCallback, createRef } from \"react\";\n\nimport Popup from \"./Popup\";\nimport Form from \"./Form\";\nimport Input from \"./Input\";\n\nexport default function EditAvatarPopup({ onUpdateAvatar, ...props }) {\n  const inputRef = createRef();\n\n  const handleSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      onUpdateAvatar(inputRef.current.value);\n    },\n    [inputRef, onUpdateAvatar]\n  );\n\n  return (\n    <Popup \n      name=\"editAvatar\" \n      popupStyle=\"popup_style_form\"\n      {...props}\n      >\n      <Form\n        title=\"Обновить аватар\" \n        submitValue=\"Сохранить\"\n        formClass=\"popup\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          name=\"avatar\"\n          theme=\"light\"\n          type=\"url\"\n          placeholder=\"Ссылка на новый аватар\"\n          isRequired={true}\n          ref={inputRef}\n        />\n      </Form>\n    </Popup>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\n\nimport Popup from \"./Popup\";\nimport Form from \"./Form\";\nimport Input from \"./Input\";\n\nexport default function AddPlacePopup({onAddPlace, ...props}) {\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState('');\n\n  const handleChangeTitle = useCallback(evt => {\n    setTitle(evt.target.value);\n  }, [setTitle]);\n\n  const handleChangeLink = useCallback(evt => {\n    setLink(evt.target.value);\n  }, [setLink]);\n\n  const handleSubmit = useCallback((evt) => {\n    evt.preventDefault();\n    onAddPlace(title, link);\n    setTitle('');\n    setLink('');\n  }, [title, link, onAddPlace]);\n\n\n  return (\n    <Popup\n      name=\"addPhoto\"\n      popupStyle=\"popup_style_form\"\n      {...props}\n      >\n      <Form\n        title=\"Новое место\"\n        formClass=\"popup\"\n        submitValue=\"Сохранить\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          name=\"photoTitle\"\n          theme=\"light\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          placeholder=\"Название\"\n          isRequired={true}\n          value={title}\n          onChange={handleChangeTitle}\n        />\n        <Input\n          name=\"photoLink\"\n          theme=\"light\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          isRequired={true}\n          value={link}\n          onChange={handleChangeLink}\n        />\n      </Form>\n    </Popup>\n  );\n}\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  /** получить список всех карточек в виде массива (GET) */\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this.headers })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`${res.status} ${res.statusText}`);\n      })\n  }\n\n  /** получить данные пользователя (GET) */\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this.headers })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`${res.status} ${res.statusText}`);\n      })\n  }\n\n  /** заменить данные пользователя (PATCH) */\n  patchUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** заменить аватар (PATCH) */\n  patchUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** добавить карточку (POST) */\n  postNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** */\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? \"PUT\" : \"DELETE\";\n    \n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: method,\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** \"залайкать\" карточку (PUT) */\n  likeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** удалить лайк карточки (DELETE) */\n  unlikeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n\n  /** удалить карточку (DELETE) */\n  deleteCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    });\n  }\n}\n\n/** Связь с сервером */\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"f7fbd0be-598d-4bc2-8963-24bc80b8013a\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport Footer from \"../components/Footer\";\r\nimport ImagePopup from \"../components/ImagePopup\";\r\nimport PopupWithForm from \"../components/PopupWithForm\";\r\nimport EditProfilePopup from \"../components/EditProfilePopup\";\r\nimport EditAvatarPopup from \"../components/EditAvatarPopup\";\r\nimport AddPlacePopup from \"../components/AddPlacePopup\";\r\n\r\nimport { api } from \"../utils/Api\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\n/** Основной компонент страницы */\r\nfunction MainPage(props) {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [isPopupsOpen, setIsPopupsOpen] = useState({\r\n    editAvatar: false,\r\n    editProfile: false,\r\n    addPlace: false,\r\n    viewPlace: false,\r\n    deletePlace: false,\r\n  });\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [isCardsLoading, setCardsIsLoading] = useState(true);\r\n  const [submitButtonValues, setSubmitButtonValues] = useState({\r\n    editAvatar: 'Сохранить',\r\n    editUserInfo: 'Сохранить',\r\n    addCards: 'Сохранить',\r\n    confirmDeletion: 'Да',\r\n  });\r\n\r\n  /** Обработка выхода из аккаунта */\r\n  const signOut = () => {\r\n    props.onSignOut();\r\n  }\r\n\r\n  useEffect(() => {\r\n    /** Загрузка данных текущего пользователя с сервера */\r\n    api\r\n    .getUserInfo()\r\n    .then((data) => {\r\n      setCurrentUser(data);\r\n      console.log(`user info loaded`);\r\n      setCardsIsLoading(true);\r\n      /** Загрузка данных карточек с сервера */\r\n      api\r\n      .getInitialCards()\r\n      .then((data) => {\r\n        setCards(data);\r\n        console.log(`cards info loaded`);\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n    })\r\n    .finally(() => {\r\n      setCardsIsLoading(false);\r\n        });\r\n    }, [setCurrentUser, setCards]);\r\n\r\n  /** Функция закрытия попапов */\r\n  const closeAllPopups = () => {\r\n    setIsPopupsOpen({\r\n      editAvatar: false,\r\n      editProfile: false,\r\n      addPlace: false,\r\n      viewPlace: false,\r\n      deletePlace: false,\r\n    })\r\n    setSelectedCard(null);\r\n  }\r\n  \r\n  /** Обработка лайка карточки */\r\n  const handleCardLike = currentCard => {\r\n    /** Проверка лайкнута ли карточка */\r\n    const isLiked = currentCard.likes.some(user => user._id === currentUser._id);\r\n    \r\n    api.changeLikeCardStatus(currentCard._id, !isLiked).then((newCard) => {\r\n      const newCards = cards.map((card) => card._id === currentCard._id ? newCard : card);\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  /** */\r\n  const handleDeleteClick = currentCard => {\r\n    setIsPopupsOpen({\r\n      ...isPopupsOpen,\r\n      deletePlace: true,\r\n    });\r\n    setSelectedCard(currentCard);\r\n  }\r\n\r\n  /** Обработка удаления карточки */\r\n  const handleCardDelete = () => {\r\n    const currentCard = selectedCard;\r\n    api.deleteCard(currentCard._id)\r\n    .then((res) => {\r\n      const newCards = cards.filter(card => {\r\n        return card._id !== currentCard._id\r\n      });\r\n      setCards(newCards);\r\n      console.log('card deleted');\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  /** Функция обработки клика по карточке */\r\n  const handleCardClick = card => {\r\n    setSelectedCard(card);\r\n    setIsPopupsOpen({\r\n      ...isPopupsOpen,\r\n      viewPlace: true,\r\n    })\r\n  }\r\n\r\n  /** Обработка сабмита редактирования профиля пользователя */\r\n  const handleUpdateUser = (data) => {\r\n    setSubmitButtonValues({\r\n      ...submitButtonValues, \r\n      editUserInfo: 'Загружается...',\r\n    })\r\n    api.patchUserInfo(data)\r\n    .then(data => {\r\n      setCurrentUser(data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n    })\r\n    .finally(() => {\r\n      console.log(`user info updates`);\r\n      setSubmitButtonValues({\r\n        ...submitButtonValues, \r\n        editUserInfo: 'Сохранить',\r\n      })\r\n      closeAllPopups();\r\n    });\r\n  }\r\n\r\n  /** Обработка сабмита редактирования аватара пользователя */\r\n  const handleUpdateAvatar = (data) => {\r\n    setSubmitButtonValues({\r\n      ...submitButtonValues, \r\n      editAvatar: 'Загружается...',\r\n    });\r\n    api.patchUserAvatar(data)\r\n    .then(data => {\r\n      setCurrentUser(data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n    })\r\n    .finally(() => {\r\n      console.log(`user avatar updated`);\r\n      setSubmitButtonValues({\r\n        ...submitButtonValues, \r\n        editAvatar: 'Сохранить',\r\n      })\r\n      closeAllPopups();\r\n    });\r\n  }\r\n  \r\n  /** Обработка сабмита добавления карточки */\r\n  const handleAddCard = (title, link) => {\r\n    setSubmitButtonValues({\r\n      ...submitButtonValues,\r\n      addCards: \"Загружается...\",\r\n    });\r\n    api\r\n      .postNewCard(title, link)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Не удалось установить новые данные: \", err);\r\n      })\r\n      .finally(() => {\r\n        console.log(`new card added`);\r\n        setSubmitButtonValues({\r\n          ...submitButtonValues,\r\n          addCards: \"Сохранить\",\r\n        });\r\n        closeAllPopups();\r\n      });\r\n  };\r\n\r\n  /** Основная разметка */\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header>\r\n        <div>\r\n          <span className=\"mail\">{props.userData.email}</span>\r\n          <button className=\"link header__link\" onClick={signOut}>Выйти</button>\r\n        </div>\r\n      </Header>\r\n      <Main\r\n        cards={cards}\r\n        isCardsLoading={isCardsLoading}\r\n        onEditProfile={() => {\r\n          setIsPopupsOpen({\r\n            ...isPopupsOpen,\r\n            editProfile: true,\r\n          })\r\n        }}\r\n        onEditAvatar={() => {\r\n          setIsPopupsOpen({\r\n            ...isPopupsOpen,\r\n            editAvatar: true,\r\n          })\r\n        }}\r\n        onAddPlace={() => {\r\n          setIsPopupsOpen({\r\n            ...isPopupsOpen,\r\n            addPlace: true,\r\n          })\r\n        }}\r\n        onCardClick={(card) => {\r\n          handleCardClick(card);\r\n        }}\r\n        onCardLike={(card) => {\r\n          handleCardLike(card);\r\n        }}\r\n        onCardDelete={(card) => {\r\n          handleDeleteClick(card);\r\n        }}\r\n      />\r\n      <Footer />\r\n      <EditProfilePopup\r\n        submitValue={submitButtonValues.editUserInfo}\r\n        isOpen={isPopupsOpen.editProfile}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n      />\r\n      <EditAvatarPopup\r\n        submitValue={submitButtonValues.editAvatar}\r\n        isOpen={isPopupsOpen.editAvatar}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n      />\r\n      <AddPlacePopup\r\n        submitValue={submitButtonValues.addCards}\r\n        isOpen={isPopupsOpen.addPlace}\r\n        onClose={closeAllPopups}\r\n        onAddPlace={handleAddCard}\r\n      />\r\n      <ImagePopup \r\n        card={selectedCard} \r\n        isOpen={isPopupsOpen.viewPlace}\r\n        onClose={closeAllPopups}\r\n      />\r\n      <PopupWithForm\r\n        submitValue={submitButtonValues.confirmDeletion}\r\n        isOpen={isPopupsOpen.deletePlace}\r\n        onClose={closeAllPopups}\r\n        onDeleteCard={handleCardDelete}\r\n      />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n/** Запрос регистрации пользователя */\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((res) => res.json())\r\n};\r\n\r\n/** Запрос авторизации пользователя */\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => res.json())\r\n};\r\n\r\n/** Проверка токена */\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Form from \"../components/Form\";\r\nimport Input from \"../components/Input\";\r\n\r\nimport * as auth from '../utils/Auth.js';\r\n\r\n\r\n/** Страница авторизации пользователя */\r\nfunction Register(props) {\r\n  const history = useHistory();\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  /** Обработка сабмита регистрации */\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (!registerData.email || !registerData.password) {\r\n      return;\r\n    };\r\n    auth\r\n      .register(registerData.email, registerData.password)\r\n      .then((res) => {\r\n        if(res.data) {\r\n          props.onRegister(true);\r\n          history.push(\"/signin\");\r\n        } else {\r\n          return Promise.reject(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        props.onRegister(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  /** Получение данных из инпутов */\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setRegisterData({\r\n      ...registerData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  /** Основная разметка */\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Link to='/signin' className=\"link header__link\">Войти</Link>\r\n      </Header>\r\n      <div className=\"content page__content\">\r\n        <Form\r\n          title=\"Регистрация\"\r\n          submitValue=\"Зарегистрироваться\"\r\n          onSubmit={handleSubmit}\r\n          formClass=\"page\"\r\n        >\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            isRequired={true}\r\n            theme=\"dark\"\r\n            value={registerData.email}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            isRequired={true}\r\n            theme=\"dark\"\r\n            value={registerData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form>\r\n        <Link className=\"link form__link\" to=\"/signin\">Уже зарегистрированы? Войти</Link>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Form from \"../components/Form\";\r\nimport Input from \"../components/Input\";\r\n\r\nimport * as auth from '../utils/Auth.js';\r\n\r\n\r\n/** Страница авторизации пользователя */\r\nfunction Login(props) {\r\n  const [loginData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  /** Обработка сабмита авторизации */\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (!loginData.email || !loginData.password) {\r\n      return;\r\n    }\r\n    auth\r\n      .authorize(loginData.email, loginData.password)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem('jwt', res.token);\r\n          props.onLogin(true);\r\n        } else {\r\n          return Promise.reject(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        props.onLogin(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  /** Получение данных из инпутов */\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setLoginData({\r\n      ...loginData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  /** Основная разметка */\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Link to='/signup' className=\"link header__link\">Регистрация</Link>\r\n      </Header>\r\n      <div className=\"content page__content\">\r\n        <Form\r\n          title=\"Вход\"\r\n          submitValue=\"Войти\"\r\n          onSubmit={handleSubmit}\r\n          formClass=\"page\"\r\n        >\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            isRequired={true}\r\n            theme=\"dark\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            isRequired={true}\r\n            theme=\"dark\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = (props) => {\r\n  return props.loggedIn ? <Route path={props.path}>{props.children}</Route> : <Redirect to=\"/signin\" />\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\nimport './styles/infoBlock.css';\r\nimport iconYesPath from '../images/yes.svg';\r\nimport iconNoPath from '../images/no.svg';\r\nimport Popup from './Popup';\r\n\r\n/** Компонент \"Попап редактирование профиля\" */\r\nexport default function InfoTooltip(props) {\r\n\r\n  return (\r\n    <Popup name=\"infoTooltip\" popupStyle=\"popup_style_form\" {...props}>\r\n      <div className=\"infoBlock\">\r\n        {props.isSuccess \r\n          ? <img className=\"infoBlock__icon\" src={iconYesPath} alt=\"Успешно\" /> \r\n          : <img className=\"infoBlock__icon\" src={iconNoPath} alt=\"Неудача\" /> \r\n        }\r\n        <p className=\"infoBlock__text\">\r\n        {`${props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}`} \r\n        </p>\r\n      </div>\r\n    </Popup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport MainPage from \"../pages/MainPage\";\nimport Register from \"../pages/Register\";\nimport Login from \"../pages/Login\";\nimport ProtectedRoute from \"../hocs/ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nimport * as auth from '../utils/Auth.js';\n\n/** Основной компонент страницы */\nfunction App() {\n  const history = useHistory();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [userData, setUserData] = useState({});\n\n  /** Проверка токена при монтировании */\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  /** Проверка токена */\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setUserData(res.data);\n          setLoggedIn(true);\n          history.push(\"/cards\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  /** Авторизация */\n  const onLogin = (booleen) => {\n    tokenCheck();\n    if(!booleen) {\n      setIsOpen(true);\n      setIsSuccess(booleen);\n    }\n  }\n\n  /** Закрытие попапа */\n  const handleClose = () => {\n    setIsOpen(false);\n  }\n\n  /** Регистрация */\n  const onRegister = (booleen) => {\n    setIsOpen(true);\n    setIsSuccess(booleen);\n  };\n\n  /** Выход из аккаунта */\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    history.push('/signin');\n  }\n\n  /** Основная разметка */\n  return (\n    <>\n      <div className=\"page__container\">\n        <Switch>\n          <ProtectedRoute loggedIn={loggedIn} path=\"/cards\">\n            <MainPage userData={userData} onSignOut={onSignOut} />\n          </ProtectedRoute>\n          <Route path=\"/signup\" >\n            <Register onRegister={onRegister} />\n          </Route>\n          <Route path=\"/signin\">\n            <Login onLogin={onLogin} />\n          </Route>\n          <Route exact path=\"/\">\n            {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>          \n        </Switch>\n      </div>\n      <InfoTooltip isOpen={isOpen} isSuccess={isSuccess} onClose={handleClose} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}